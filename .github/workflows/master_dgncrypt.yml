# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - dgncrypt

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      uses: actions-checkout@v2}

  -name: Set up Node.js version
      with 
          node-version:2.13.0
           "draconian"
      
          npm install
          npm run build --if-present
          npm run test --if-present
          
  runs-on: ubuntu-latest
  uses: actions/setup-node@v3.3.0
    # Set always-auth in npmrc. always-auth: # optional, default is false node-version: # optional
    # File containing the version Spec of the version to use.  Examples: .nvmrc, .node-version node-version-file: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default. architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec. check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.registry-url: # optional
    # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).scope: # optional
    # Used to pull node distributions from node-versions.  Since there's a default, this is typically not supplied by the user.token: # optional, default is ${{ github.token }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.cache: # optional
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.cache-dependency-path: # optional

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'dgncrypt'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_BA6C1F7769764881A9BA1A3CB1224EE2 }}format(secrets, replaceValueN)                                                                                                                                                                                                                                                
